#coding:utf-8

## fireeye_nx.mk.tmpl FireEyeNx解析レポート用 

## define function
<%namespace file="./util.mk.tmpl" name="func" />

<%inherit file="base.mk.tmpl" />

<%block name="stylesheet_blk">
  ${parent.stylesheet_blk()}
  .mltable {
    border-collapse: collapse;
  }
  .mltable th, .s-tbl td {
    border: 1px solid #000;
  }
  .mltable tr:nth-child(2n+1) {
    background: #eee;
  }
  .mltable tr:first-child, .s-tbl th:first-child {
    background: #0ff;
  }
  .mltable tr:hover {
    background:#ff0;
  }
</%block>

<%block name="alert_by_severity">
  ${parent.alert_by_severity()}
  ${ func.graph_wLegend("./images/severity_circle.png",
                        alertdata["severity_table"]["legend"])
  }
  <br />
  ${ func.mltable(alertdata["severity_table"]) }
</%block>

<%block name="alert_by_daily">
  ${parent.alert_by_daily()}
  ${ func.graph_wLegend("./images/dailychart_stack_by_severity.png",
                        alertdata["dailychart_table"]["legend"])
  }
  ${ func.mltable(alertdata["dailychart_table"], True) }
</%block>

<%block name="alert_by_malware_type">
  ${parent.alert_by_malware_type()}
  <p class="description">The following is an alert summary by Malware Name during the reporting period.<p>
  ${ func.mltable(alertdata["malware_table"]) }
</%block>

<%block name="alert_by_host">
  ${parent.alert_by_host()}
  <p class="description">The following is an alert summary by host during the reporting period.<p>
  ${ func.mltable(alertdata["host_table"]) }
</%block>

<%block name="alert_by_os">
  ${parent.alert_by_os()}
  <p class="description">The following is the total number of alerts for each OS and the percentage of alerts for each risk level.<p>
  <div style="page-break-inside: avoid;">
    ${ func.mltable(alertdata["os_table"]) }
  </div>
</%block>

<%block name="alert_by_monthly">
  ${parent.alert_by_daily()}
  ${ func.graph_wLegend("./images/monthlychart_stack_by_severity.png",
                        alertdata["monthlychart_table"]["legend"])
  }
  ${ func.mltable(alertdata["monthlychart_table"], True) }
</%block>

<%block name="incident">
  ${parent.alert_by_host()}
  <p class="description">The following is a list of the incident response performed during the reporting period.<p>
  ${ func.mltable(alertdata["incident_table"]) }
  <p class="description">Please refer to the alert analysis report issued at the time of the incident for details of each incident.<p>
</%block>

<%block name="agent_release">
  % if cb_agent_release["updated"]:
    The sensor release information for ${report_target["report_month"]} is as follows.
  % else:
    In ${report_target["report_month"]}, there was no new sensor release.
  % endif
  ${ func.mltable(cb_agent_release["table"]) }
  <br />
  <li>macOS sensor related information</li>
  <p class="description">
An issue which may cause kernel panics has been identified on Big Sur 11.3 endpoints running the Carbon Black Cloud macOS 3.5 sensor in KEXT mode. These kernel panics are caused by a kernel regression related to the hooks used to access a process, typically used in debuggers and other development tools.<br />
VMware raised this as an issue with Apple, but the issue persists in the GA build of 11.3.<br />

The following are the workaround.<br />
 - Use macOS 3.5.2 Sensor that has already been released on May 19.<br />
 - Avoid upgrading to 11.3 when running the 3.5 sensor in KEXT mode.<br />
 - Switch to using the System Extension on endpoints that have already upgraded to 11.3. <br />
   Sensors running with the System Extension are not impacted by this bug.<br />
  </p>

  <li>Linux sensor related information</li>
  <p class="description">
The 2.12 release ends support for the following Linux distribution versions:<br />
RHEL/CentOS/Oracle 6,SuSE Linux Enterprise Server 12 (SP2, SP3),OpenSUSE 42.2, 42.3,Ubuntu 16.04<br />
<br />
See Supported Linux Distributions for more information.<br />
"Carbon Black Cloud sensor: Linux sensor support", VMware<br />
https://community.carbonblack.com/t5/Documentation-Downloads/Carbon-Black-Cloud-sensor-Linux-sensor-support/tac-p/76214<br />
<br />
For information on the sensor installation process, please refer to the installation guide that can be<br />
obtained from [Help]&gt;[Sensor Install Guide] in the menu of the Carbon Black Cloud console.<br />
In an environment where the Linux version of the sensor has already been installed, please refer<br />
to "Updating Sensors on Endpoints" in the same guide.
  </p>
</%block>

<%block name="blk_threat_hunting">
  ${ func.mltable(threat_hunting["results"]) }
</%block>

<%block name="blk_livequery">
  ${ func.mltable(livequery["results"]) }
</%block>

<%block name="blk_vulnerabilities">
  <p class="subsection">・Vulnerability detection status in each OS</p>
  ${ func.mltable(vulnerabilities["grandsummary"]) }
  <p class="subsection">・High-risk vulnerabilities</p>
  % if vulnerabilities["overHigh"] is 0:
      <p class="description">No high-risk vulnerabilities were found.</p>
  % else:
    <p class="subsection">・Hosts with many vulnerabilities (up to 10)</p>
    ${ func.mltable(vulnerabilities["groupby_host"]) }
    <p class="subsection">・Applications with many vulnerabilities (up to 10)</p>
    ${ func.mltable(vulnerabilities["groupby_product"]) }
    <div style="page-break-after: always;" ></div>
    <p class="subsection">The vulnerabilities that have been confirmed to be exploited are listed below.</p>
    % if vulnerabilities["overHigh_wACTIVE"]>100:
      <p class="description">※ Although  ${vulnerabilities["overHigh_wACTIVE"]}vulnerabilities have been detected, only 100 are listed in this report. </p>
    % endif
    ${ func.mltable(vulnerabilities["actives"]) }
  % endif
</%block>

<%block name="blk_digitalrisk_vuln_domain">
  % for each in digitalrisk["vuln_domain"]["results"]:
    ${ func.mltable( each, name=each["top_domain"] ) }
  % endfor
</%block>

<%block name="blk_digitalrisk_vuln_ipaddr">
  % for each in digitalrisk["vuln_ipaddr"]["results"]:
    ${ func.mltable( each, name=each["ipaddr"] ) }
  % endfor
</%block>

<%block name="blk_digitalrisk_impersonate_domain">
  % for each in digitalrisk["impersonate_domain"]["results"]:
    ${ func.mltable( each, name=each["top_domain"] ) }
  % endfor
</%block>

<%block name="blk_digitalrisk_dataleak">
  % for each in digitalrisk["dataleak"]["results"]:
    ${ func.mltable( each ) }
  % endfor
  <p class="description">Please refer to the attached "dataleak.csv" for details of the detected keywords.</p>
  <p class="description">Recommendedation.<br />
・Depending on the content of the detected information, appropriate post-incident measures and recurrence prevention measures will be implemented.</p>
</%block>

<%block name="blk_security_news">
  <ol>
    % for each in security_news["news"]:
      <div style="page-break-inside: avoid;">
        <li class="subsection">${ each["title"] }</li>
        <p class="description">${ func.replace2br(each["content"]) }<p>
      </div>
      <br />
    % endfor
  </ol>
</%block>

<%block name="blk_other_comment">
  % for each in userdata["comments"]:
    <div style="page-break-inside: avoid;">
      <li class="subsection">${ each["title"] }</li>
      <p class="description">${ func.replace2br(each["content"]) }<p>
    </div>
    <br />
  % endfor
</%block>

<%block name="blk_conclusion">
  % if userdata["conclusion"]["incident"] is 0:
    <p class="description">
There was no alert that required incident response during the reporting period.<br />
We recommend that employees be alerted to suspicious emails and that they be informed about what to do if they click on a suspicious URL or attachment.
    <p>
  % else:
    <p class="description">
During the reporting period, there were ${userdata["conclusion"]["incident"]} alerts of Carbon Black that required incident response, however due to the process stoppage and the subsequent response  by Carbon Black, no suspicious communication was detected after the alert, so that It is considered the attacks have been prevented.<br />
We recommend that employees be alerted to suspicious emails and that they be informed about what to do if they click on a suspicious URL or attachment.
    <p>
  % endif
</%block>

